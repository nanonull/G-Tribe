attribute vec4 a_position;
attribute vec4 a_terrain_soil;
attribute vec2 a_texCoord0;
attribute vec3 a_normal;

uniform mat4 u_model_view;
uniform mat4 u_world_trans;
uniform vec3 u_ambientColor;
uniform mat3 u_normalMatrix;
uniform vec3 u_directLightColor;
uniform vec3 u_directLightDirection;

varying vec2 v_texCoords;
varying vec4 v_terrainSoil;
varying vec3 v_lightDiffuse;

void main()
{
  v_lightDiffuse = u_ambientColor;

  vec3 normal = normalize(u_normalMatrix * a_normal);

  vec3 lightDir = -u_directLightDirection;
    float NdotL = clamp(dot(normal, lightDir), 0.0, 1.0);
    vec3 value = u_directLightColor * NdotL;
    v_lightDiffuse += value;

  v_texCoords = a_texCoord0;
  v_terrainSoil = a_terrain_soil;
  gl_Position = u_model_view * u_world_trans * a_position;
}